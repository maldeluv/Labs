data segment ; директива начала сегмента данных
count db 0
res db ?
mass db -0010110b,001011b,0110b,10010110b,-00111100b,0010110b,0010110b,0b,1b,111b ; массив из 10 элементов, каждый размером в байт
data ends
code segment ; директива начала сегмента кодов
assume cs: code, ds: data ; установка соответсвий сегментов и их адресов
start: ; метка входа
mov ax,data ; Загрузка адреса
mov ds,ax ; сегмента данных

lea bx, mass
mov cx,10
xor dx,dx

beg: mov al, [bx]
mov dh, cl ; сохраняем счетчик cl в dh
mov cx,8 ; устанавливаем счётчик бит в байте

bit: ; метка проверки бита
test al,1b ; является ли бит единицей?
jz no ; если нет, то переход к метке
inc count ; иначе +1 к кол-ву единиц в байте

no: ; метка, если бит = 0
shr al,1 ; сдвиг вправо на один разряд
loop bit ; повторяем проверку уже следующего бита
			
cmp count,3	; в байте 3 единицы?
jnz netri ; если нет, то переход в метке
inc dl ; иначе увеличиваем результат на единицу

netri: ; метка, если в байте не 3 единицы
mov count,0	; обнуляем счётчик единиц в байте
inc bx ; переходим к следующему байту
mov cl, dh ; получаем счетчик из dh в cl
loop beg ; повторяем цикл, пока байты не кончатся
 
mov res ,dl ; переношу результат из dl в переменную

quit:				; метка выхода
	mov ax, 4c00h 	; код завершения: 0
	int 21h 		; выход в DOS
code ends
end start